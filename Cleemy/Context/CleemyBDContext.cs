// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Cleemy.Entities;

namespace Cleemy.Context
{
    public partial class CleemyBDContext : DbContext
    {
        public CleemyBDContext()
        {
        }

        public CleemyBDContext(DbContextOptions<CleemyBDContext> options)
            : base(options)
        {
        }

        public virtual DbSet<CleemyUser> CleemyUser { get; set; }
        public virtual DbSet<Expense> Expense { get; set; }
        public virtual DbSet<ExpenseNature> ExpenseNature { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CleemyUser>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Currency)
                    .IsRequired()
                    .HasMaxLength(3)
                    .HasColumnName("currency");

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .HasColumnName("firstName");

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .HasColumnName("lastName");
            });

            modelBuilder.Entity<Expense>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Amount)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("amount");

                entity.Property(e => e.Commentary)
                    .IsRequired()
                    .HasColumnName("commentary");

                entity.Property(e => e.ExpenseDate)
                    .HasColumnType("date")
                    .HasColumnName("expenseDate");

                entity.Property(e => e.FkCleemyUser).HasColumnName("fk_CleemyUser");

                entity.Property(e => e.FkExpenseNature).HasColumnName("fk_expenseNature");

                entity.HasOne(d => d.FkCleemyUserNavigation)
                    .WithMany(p => p.Expense)
                    .HasForeignKey(d => d.FkCleemyUser)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Expense__fk_Clee__2A4B4B5E");

                entity.HasOne(d => d.FkExpenseNatureNavigation)
                    .WithMany(p => p.Expense)
                    .HasForeignKey(d => d.FkExpenseNature)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Expense__fk_expe__2B3F6F97");
            });

            modelBuilder.Entity<ExpenseNature>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("name");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}